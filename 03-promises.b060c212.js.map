{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,kBACnCE,WAAYH,SAASC,cAAc,gBACnCG,UAAWJ,SAASC,cAAc,eAClCI,YAAaL,SAASC,cAAc,kBAMtC,SAASK,EAAcC,EAAUC,GACTC,KAAKC,SAE3BC,YAAW,W,GAMRC,OAAOd,EAAKK,WAAWU,O,CAZ5Bf,EAAKC,OAAOe,iBAAiB,SAAUR,GACvCR,EAAKC,OAAOe,iBAAiB,UAc7BR,IACGS,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAEvEa,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBS,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  checkBtnEl: document.querySelector('button[submit]'),\n  inputDelay: document.querySelector('input[delay]'),\n  inputStep: document.querySelector('input[step]'),\n  inputAmount: document.querySelector('input[amount]'),\n};\n\nrefs.formEl.addEventListener('submit', createPromise);\nrefs.formEl.addEventListener('change');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    if (shouldResolve) {\n      // Fulfill\n    } else {\n      // Reject\n    }\n  }, Number(refs.inputDelay.value));\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// for (let i = 0; i < Number(amount.value); i += 1) {\n//   createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n//     .then(({ position, delay }) => {\n//       Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//     });\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","checkBtnEl","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","setTimeout","Number","value","addEventListener","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b060c212.js.map"}